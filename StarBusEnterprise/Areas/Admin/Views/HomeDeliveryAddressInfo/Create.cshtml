


@model StarBusEnterprise.Models.DomainWork.HomeDeliveryAddressInfo

@{
    ViewData["Title"] = "Create";
    Layout = null;
}

<style>
    .form-group {
        color: black;
        border-color: black;
    }
    .form-control {
        border-color: black;
        color: black;
    }
</style>
<div class="container">
   
    <div class="col col-lg-12">
        <h4>StarBus HomeDeliveryAddressInfo </h4>
        <hr />
    </div>
    <div class="col-md-12">
        <form id="MAnageClient" class="col-md-12">
            @Html.AntiForgeryToken()


            <input type="hidden" name="Id" class="form-control" value="@Model.Id" />

            <div class="form-group">
                <label class="control-label" for="homedeliveryserviceName"> Name</label>
                <input class="form-control" type="text" data-val="true" data-val-length="less data" data-val-length-min="4"
                       data-val-required="The homedeliveryserviceName field is required." id="homedeliveryserviceName" name="homedeliveryserviceName" value="@Model.homedeliveryserviceName">
                <span class="text-danger field-validation-valid" data-valmsg-for="homedeliveryserviceName" data-valmsg-replace="true"></span>
            </div>

            <div class="form-group">
                <label class="control-label" for="AreaCode">Area Code</label>
                <input class="form-control" type="number" data-val="true" data-val-length="less data" data-val-length-min="4"
                       data-val-required="The AreaCode field is required." id="AreaCode" name="AreaCode" value="@Model.AreaCode">
                <span class="text-danger field-validation-valid" data-valmsg-for="AreaCode" data-valmsg-replace="true"></span>
            </div>

            <div class="form-group">
                <label class="control-label" for="homedeliveryserviceContact">Contact</label>
                <input class="form-control" type="number" data-val="true" data-val-length="less data" data-val-length-min="4"
                       data-val-required="The homedeliveryserviceContact field is required." id="homedeliveryserviceContact" name="homedeliveryserviceContact" value="@Model.homedeliveryserviceContact">
                <span class="text-danger field-validation-valid" data-valmsg-for="homedeliveryserviceContact" data-valmsg-replace="true"></span>
            </div>




            <div class="form-group">


                <a class="btn btn-success btn-group" onclick="saveSpecification()"><i class="fas fa-save"> </i></a>

                <a class="btn btn-danger btn-group" onclick="Delete()"><i class="fas fa-trash-alt"></i></a>
            </div>
        </form>
    </div>
</div>
<div id="domMessage" style="display:none;">
    <h1>We are processing your request.  Please be patient.</h1>
</div>

@*@section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }*@

<script>
    function saveSpecification() {

        var formData1 = $("#MAnageClient").serialize(); const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })
        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't Save this!",
            icon: 'success',
            showCancelButton: true,
            confirmButtonText: 'Yes, Save it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
        }).then((result) => {
            if (result.value) {
                event.preventDefault();
                var $daer = $('#MAnageClient');
                if ($daer.valid()) {


                    $.ajax
                        (
                            {
                                url: "/Admin/HomeDeliveryAddressInfo/Create/",
                                method: "POST",
                                data: formData1,

                                success: function (data) {


                                    swalWithBootstrapButtons.fire(
                                        'SUccess',
                                        'Yor file is Saved :)'

                                    )
                                        .then(function () {
                                            $("#myModal").modal("hide");
                                            window.location.reload();
                                        });

                                }

                            }
                        );
                }
            }
            else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                $("#myModal").modal("hide");
                swalWithBootstrapButtons.fire(
                    'Cancelled',

                    'error'
                )
            }
        })

    }







    function Delete() {
        var formData1 = $("#MAnageClient").serialize();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })
        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
        }).then((result) => {
            if (result.value) {
                $.ajax(
                    {
                        method: "POST",
                        url: "/Admin/HomeDeliveryAddressInfo/DeleteConfirmed/",

                        data: formData1,
                        success: function (result) {


                            $("#myModal").modal("hide");

                            //window.location.reload();
                            swalWithBootstrapButtons.fire(
                                'SUccess',
                                'Yor file is deleted :)'

                            )
                                .then(function () { window.location.reload(); });

                        }

                    });


            }
            else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                $("#myModal").modal("hide");
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Your imaginary file is safe :)',
                    'error'
                )
            }
        })

    }
    //Swal.fire({
    //    title: 'Are you sure?',
    //    text: "You won't be able to revert this!",
    //    icon: 'warning',
    //    showCancelButton: true,
    //    confirmButtonColor: '#3085d6',
    //    cancelButtonColor: '#d33',
    //    confirmButtonText: 'Yes, delete it!'
    //}).then((result) => {
    //    if (result.value) {
    //        Swal.fire(
    //            'Deleted!',
    //            'Your file has been deleted.',
    //            'success'
    //        )
    //    }
    //})
</script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>